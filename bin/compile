#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# clean up leaking environment
unset GIT_DIR

# parse args
BUILD_DIR=$1
CACHE_DIR=$2

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

BUILD_DIR=$(mktemp -d -t node.XXXXXX)

curl --silent --location https://raw.github.com/heroku/heroku-buildpack-nodejs/master/bin/compile > compile_node

chmod 755 compile_node

curl --silent --location https://raw.github.com/abhishekmunie/heroku-buildpack-static-css/master/conf/package.json > $BUILD_DIR/package.json
./compile_node $BUILD_DIR $CACHE_DIR

export PATH=$BUILD_DIR/bin:$BUILD_DIR/node_modules/.bin:$PATH

# css compilation ----------------------------

BUILD_DIR=$1

echo "-----> Installing SASS..."
if [ ! -d "$PWD/.gem" ]; then
  mkdir $PWD/.gem
fi
gem install sass --no-rdoc --no-ri --install-dir "$PWD/.gem" | indent
export GEM_PATH=$GEM_PATH:$PWD/.gem
echo "       done."

echo "-----> Compiling plugins..."
if [ -f "$BUILD_DIR/plugins/compile" ]; then
  chmod +x $BUILD_DIR/plugins/compile
  $BUILD_DIR/plugins/compile $BUILD_DIR $CACHE_DIR
fi
echo "       done."

echo "-----> Compiling LESS..."
find ${BUILD_DIR} -iregex ".*\.less" \! -path '*/plugins/*' | while read -r lessfile
do
  echo -n "-----> compiling ${lessfile#*$BUILD_DIR/}..." | indent
  fname=${lessfile%.*}
  lessc "$lessfile" > "$fname.scss" | indent
  echo "done"
done
echo "       done."

if [ ! -f "$BUILD_DIR/config.rb" ]; then
  echo "-----> Compiling SASS..."
  $PWD/.gem/bin/sass --update $BUILD_DIR:$BUILD_DIR | indent
  echo "       done."
else
  echo "-----> Installing Compass..."
  gem install compass --no-rdoc --no-ri --install-dir "$PWD/.gem" | indent
  echo "       done."
  echo "-----> Compiling Compass..."
  $PWD/.gem/bin/compass compile $BUILD_DIR | indent
  echo "       done."
fi

echo "-----> Cleaning LESS..."
find ${BUILD_DIR} -iregex ".*\.less" \! -path '*/plugins/*' | while read -r lessfile
do
  rm -f "$lessfile"
done
echo "       done."

echo "-----> Cleaning SCSS..."
find ${BUILD_DIR} -iregex ".*\.scss" \! -path '*/plugins/*' | while read -r scssfile
do
  rm -f "$scssfile"
done
echo "       done."

echo -n "-----> Fetching YUI Compressor 2.4.7..."
curl --silent --location http://cloud.github.com/downloads/abhishekmunie/heroku-buildpack-static-css/yuicompressor-2.4.7.jar.tar.gz | tar xz
echo "done"

echo "-----> Compressing CSS files..."
find ${BUILD_DIR} -iregex ".*\.css" \! -iregex ".*\.min\.css" | while read -r cssfile
do
  echo -n "-----> compressing ${cssfile#*$BUILD_DIR/}..." | indent
  fname=${cssfile%.*}
  java -jar yuicompressor-2.4.7.jar --type css -o "$fname.min.css" "$cssfile" | indent
  csssha1=`openssl sha1 "$cssfile"`
  csssha1=${csssha1#*= }
  csssha1=${csssha1:0:8}
  cp "$fname.min.css" "$fname.$csssha1.css"
  echo "done"
done
echo "       done."

# init default nginx configuration ----------

if [ -d "${BUILD_DIR}/conf" ]; then
  echo "-----> Using existing nginx configuration."
else
  echo -n "-----> Creating default nginx configuration..."
  mkdir ${BUILD_DIR}/conf
  curl --silent --location https://raw.github.com/abhishekmunie/heroku-buildpack-static-css/master/conf/mime.types > ${BUILD_DIR}/conf/mime.types
  curl --silent --location https://raw.github.com/abhishekmunie/heroku-buildpack-static-css/master/conf/nginx.conf.erb > ${BUILD_DIR}/conf/nginx.conf.erb
  echo "done"
fi

# Static ------------------------------------

curl --silent --location https://raw.github.com/abhishekmunie/heroku-buildpack-static/master/bin/compile > compile_static
chmod +x compile_static
./compile_static $BUILD_DIR $CACHE_DIR